(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{120:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return l})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return s}));var a=n(2),i=n(6),r=(n(0),n(128)),o={id:"rsdl",title:"RAPID Schema Definition Language (RSDL)",sidebar_label:"RAPID Schema Definition"},l={id:"rsdl",title:"RAPID Schema Definition Language (RSDL)",description:"RAPID allows to design your services using the RAPID Service Definition Language (RSDL).",source:"@site/../docs/rapid-pro-rsdl.md",permalink:"/docs/rsdl",editUrl:"https://github.com/oasis-open/odata-rapid/edit/master/docs/../docs/rapid-pro-rsdl.md",sidebar_label:"RAPID Schema Definition",sidebar:"docs",previous:{title:"Actions and Functions",permalink:"/docs/operations"},next:{title:"Resource Description",permalink:"/docs/spec/resourceformat"}},c=[{value:"Building your first type",id:"building-your-first-type",children:[]},{value:"Building your service",id:"building-your-service",children:[]},{value:"Enabling resource modification",id:"enabling-resource-modification",children:[]},{value:"Possible primitive types",id:"possible-primitive-types",children:[]},{value:"Relationships (Navigation components)",id:"relationships-navigation-components",children:[]},{value:"Custom operations",id:"custom-operations",children:[]},{value:"Directives reference",id:"directives-reference",children:[]}],p={rightToc:c};function s(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"RAPID allows to design your services using the RAPID Service Definition Language (RSDL).\nRSDL is an expression language for capturing services, entities, operations and various expressions in human-readable format."),Object(r.b)("p",null,"RSDL syntax is very similar to many popular schema formats like GraphQL,\nbringing simplicity and lowering amount of time required to learn it.\nRSDL is compatible with GraphQL syntax which gives numerous benefits:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"All existing IDE plugins for GraphQL syntax highlighting will work with RAPID format."),Object(r.b)("li",{parentName:"ul"},"Numerous of tools for validating schema complexity, detecting changes can be also used with RAPID"),Object(r.b)("li",{parentName:"ul"},"Developers can use various tools to generate their models directly from database definitions or even code."),Object(r.b)("li",{parentName:"ul"},"Simplified migration path from GraphQL to RAPID by reusing parts of the same schema.")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"NOTE: RSDL can be compiled into CSDL JSON and CSDL XML formats using a subset of the features of the OData specification")),Object(r.b)("h2",{id:"building-your-first-type"},"Building your first type"),Object(r.b)("p",null,"Developers who would like to represent their datamodel will need to create new RAPID schema file,\nfor example ",Object(r.b)("inlineCode",{parentName:"p"},"MyRapidPro.graphql"),". At minimum schema will require at least one Entity Type.\nEntity type is being build by specifying ",Object(r.b)("inlineCode",{parentName:"p"},"type")," keyword and listing all it's fields like follows:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-graphql"}),"type company {\n    stockSymbol: String! @RapidID\n    name: String\n    incorporated: DateTimeOffset!\n}\n")),Object(r.b)("p",null,"This minimal definition of the RAPID schema contains the following elements:"),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},Object(r.b)("inlineCode",{parentName:"p"},"type company"),"  - definition of the ",Object(r.b)("inlineCode",{parentName:"p"},"company")," type")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},Object(r.b)("inlineCode",{parentName:"p"},"stockSymbol: String! @RapidID")," -\ndefinition of the ",Object(r.b)("inlineCode",{parentName:"p"},"stockSymbol")," field that has ",Object(r.b)("inlineCode",{parentName:"p"},"String"),"\nprimitive type and ",Object(r.b)("inlineCode",{parentName:"p"},"@RapidID")," directive that assigns it to become Entity ID ")),Object(r.b)("p",null,"Fields are defined by specifying field name (for example ",Object(r.b)("inlineCode",{parentName:"p"},"name"),") followed by ",Object(r.b)("inlineCode",{parentName:"p"},":")," and a primitive type like ",Object(r.b)("inlineCode",{parentName:"p"},"String")," etc."),Object(r.b)("h2",{id:"building-your-service"},"Building your service"),Object(r.b)("p",null,"A RAPID service consists of top-level resources that can be addressed via URLs.\nThese are defined via the special type ",Object(r.b)("inlineCode",{parentName:"p"},"Query"),":"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-graphql"}),"type Query {\n    company: company\n    competitors: [company]\n}\n")),Object(r.b)("p",null,"Each field of ",Object(r.b)("inlineCode",{parentName:"p"},"Query")," defines a top-level resource that can be reached via a URI ending in the same name:"),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"GET ",Object(r.b)("inlineCode",{parentName:"p"},"/v4/rapid/company"))),Object(r.b)("p",null,"will return the company this service is about."),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"GET ",Object(r.b)("inlineCode",{parentName:"p"},"/v4/rapid/competitors"))),Object(r.b)("p",null,"will return the list of the competitor companies: ",Object(r.b)("inlineCode",{parentName:"p"},"[company]")," means that ",Object(r.b)("inlineCode",{parentName:"p"},"competitors")," is a list resource, and  the list items are of type ",Object(r.b)("inlineCode",{parentName:"p"},"company"),"."),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"GET ",Object(r.b)("inlineCode",{parentName:"p"},"/v4/rapid/competitors/cgswl"))),Object(r.b)("p",null,"will return the competitor company identified by the string ",Object(r.b)("inlineCode",{parentName:"p"},"cgswl"),"."),Object(r.b)("h2",{id:"enabling-resource-modification"},"Enabling resource modification"),Object(r.b)("p",null,"By default RAPID is not exposing operations that can modify resources.\nThese are enabled via the special ",Object(r.b)("inlineCode",{parentName:"p"},"type Mutation"),":"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-graphql"}),"type Mutation {\n    # Allows update operation to the company resource\n    company: company @RapidUpdate\n    # Allows create, update, and delete operations to the competitors resource\n    competitors: company @RapidCreate @RapidUpdate  @RapidDelete\n}\n")),Object(r.b)("h2",{id:"possible-primitive-types"},"Possible primitive types"),Object(r.b)("p",null,"RSDL provides multiple primitive types out of the\nbox"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-graphql"}),'""" \nString input\n"""\nString\n\n""" \nInt input that represents 32 bits integer\n"""\nInt\n\n""" \nFloat input that represents double precision decimal point value\n"""\nFloat\n\n""" \nBoolean input\n"""\nBoolean\n\n""" Advanced types """ \n\n""" \n32bit Integer Data type\n""" \nInt32\n\n""" \nDecimal point variable\n"""\nDecimal\n\n""" \nDate and time with a time-zone offset, no leap seconds\n"""\nDateTimeOffset\n\n""" \nDate without a time-zone offset\n"""\nDate\n\n""" \nTime without a time-zone offset\n"""\nTimeOfDay\n\n""" \nBinary data, stream of octets\n"""\nBinary\n\n""" \n64bit Integer Data type\n"""\nInt64\n\n""" \nDescribes double precision float\n"""\nDouble\n\n""" \nDescribes Globally Unique Identifier (also known as UUID)\n16-byte (128-bit) unique identifier\n"""\nGuid\n')),Object(r.b)("h2",{id:"relationships-navigation-components"},"Relationships (Navigation components)"),Object(r.b)("p",null,"Types can have fields that use other structured types:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-graphql"}),"type company {\n    stockSymbol: String! @RapidID\n    name: String\n    incorporated: DateTimeOffset!\n    employees: [employee]\n}\n\ntype employee {\n    id: Int32! @RapidID\n    firstName: String\n    lastName: String\n    title: String\n}\n")),Object(r.b)("p",null,"If these related types are not listed in the ",Object(r.b)("inlineCode",{parentName:"p"},"Query")," type, they can only be accessed indirectly:"),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"GET ",Object(r.b)("inlineCode",{parentName:"p"},"/v4/rapid/company/employees"))),Object(r.b)("p",null,"will return the list of employees of the company this service is about."),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"GET ",Object(r.b)("inlineCode",{parentName:"p"},"/v4/rapid/company/employees/2"))),Object(r.b)("p",null,"will return the employee whose ",Object(r.b)("inlineCode",{parentName:"p"},"id")," equals ",Object(r.b)("inlineCode",{parentName:"p"},"2"),"."),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"GET ",Object(r.b)("inlineCode",{parentName:"p"},"/v4/rapid/competitors/cgswl/employees"))),Object(r.b)("p",null,"will return the list of employees of the competitor ",Object(r.b)("inlineCode",{parentName:"p"},"cgswl"),"."),Object(r.b)("h2",{id:"custom-operations"},"Custom operations"),Object(r.b)("p",null,"Type can contain bound functions that will be added as fields to the specific type:\nOperations can accept various arguments by supplying them in parenthesis as follows:\n",Object(r.b)("inlineCode",{parentName:"p"},"OperationName(argument: String): Person")),Object(r.b)("p",null,"For example:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-graphql"}),"type Trip {\n    PlanItems(queryOptions: QueryOptions): [PlanItem]\n    GetInvolvedPeople(queryOptions: QueryOptions): [Person]\n}\n")),Object(r.b)("p",null,"Unbound functions can be represented using special type called Query.\nQuery can aggegate all operations that are not directly associated with the model"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-graphql"}),"type Query {\n    GetPersonWithMostFriends: Person\n    GetNearestAirport(lat: Float, lon: Float): Airport\n\n}\n")),Object(r.b)("p",null,"For modifications developers can use actions.\nActions can be represented using special type called Mutation.\nFor example:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-graphql"}),"type Mutation {\n    UpdatePerson(person: Person): Person\n}\n")),Object(r.b)("h2",{id:"directives-reference"},"Directives reference"),Object(r.b)("p",null,"List contains all possible directives that can be used to modify behaviour of your\nmodels."),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"),Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Location"),Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Required"),Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:"left"}),"Singleton"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"@RapidID"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Marks field in the type as identifying for instances of the type"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Field"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"true"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"true")))))}s.isMDXComponent=!0},128:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return m}));var a=n(0),i=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=i.a.createContext({}),s=function(e){var t=i.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},b=function(e){var t=s(e.components);return i.a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},d=i.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,o=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),b=s(n),d=a,m=b["".concat(o,".").concat(d)]||b[d]||u[d]||r;return n?i.a.createElement(m,l(l({ref:t},p),{},{components:n})):i.a.createElement(m,l({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var p=2;p<r;p++)o[p]=n[p];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);