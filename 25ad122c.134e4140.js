(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{62:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return o})),t.d(n,"metadata",(function(){return l})),t.d(n,"rightToc",(function(){return p})),t.d(n,"default",(function(){return b}));var a=t(2),r=t(6),i=(t(0),t(85)),o={id:"rsdl-semantics",title:"RAPID SDL Semantics"},l={unversionedId:"rsdl/rsdl-semantics",id:"rsdl/rsdl-semantics",isDocsHomePage:!1,title:"RAPID SDL Semantics",description:"RAPID Pro schema definition language",source:"@site/..\\docs\\rsdl\\rapid-pro-rsdl-semantics.md",slug:"/rsdl/rsdl-semantics",permalink:"/docs/rsdl/rsdl-semantics",editUrl:"https://github.com/oasis-open/odata-rapid/edit/master/docs/../docs/rsdl/rapid-pro-rsdl-semantics.md",version:"current",sidebar:"docs",previous:{title:"RAPID SDL intro",permalink:"/docs/rsdl/rsdl-intro"},next:{title:"RAPID SDL ABNF",permalink:"/docs/rsdl/rsdl-abnf"}},p=[{value:"Model",id:"model",children:[]},{value:"Type definitions",id:"type-definitions",children:[{value:"Type definitions without @key properties",id:"type-definitions-without-key-properties",children:[]},{value:"Type definitions with @key properties",id:"type-definitions-with-key-properties",children:[]},{value:"Properties",id:"properties",children:[]},{value:"Functions",id:"functions",children:[]}]},{value:"Enum definitions",id:"enum-definitions",children:[]},{value:"Service definition",id:"service-definition",children:[{value:"multi-value service element",id:"multi-value-service-element",children:[]},{value:"single-value service element",id:"single-value-service-element",children:[]}]},{value:"Appendix",id:"appendix",children:[{value:"References",id:"references",children:[]}]}],c={rightToc:p};function b(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},c,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("h1",{id:"rapid-pro-schema-definition-language"},"RAPID Pro schema definition language"),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},"DRAFT\nInitial Draft. July 2020")),Object(i.b)("p",null,"The semantic of RSDL (RAPID Pro schema definition language) can be described by mapping\nsyntactical constructs described in ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/rsdl/rsdl-abnf"}),"rapid-pro-rsdl-abnf")," to equivalent ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"http://docs.oasis-open.org/odata/odata-csdl-xml/v4.01/odata-csdl-xml-v4.01.html"}),"CSDL")," constructs."),Object(i.b)("p",null,"Please refer to ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/rsdl/rsdl-abnf"}),"rapid-pro-rsdl-abnf")," for the syntactical constructs of RSDL."),Object(i.b)("h2",{id:"model"},"Model"),Object(i.b)("p",null,"A ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/rsdl/rsdl-abnf#model"}),"model"),' is mapped to a CSDL Schema named "rapid", that has an entity container named "default".'),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-JSON"}),'{\n    "$Version": "4.01",\n    "$EntityContainer": "rapid.default",\n    "rapid": {\n        "default": {\n            "$Kind": "EntityContainer"\n        }\n    }\n}\n')),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-XML"}),'<Schema Namespace="rapid" xmlns="http://docs.oasis-open.org/odata/ns/edm">\n    <EntityContainer Name="default">\n    </EntityContainer>\n</Schema>\n')),Object(i.b)("p",null,"The model's\n",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/rsdl/rsdl-abnf#type-definition"}),"typeDefinition"),",\n",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/rsdl/rsdl-abnf#service-definition"}),"serviceDefinition"),", or\n",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/rsdl/rsdl-abnf#enum-definition"}),"enumDefinition")," are mapped to the respective constructs below and added to the schema (or container respectively)"),Object(i.b)("h2",{id:"type-definitions"},"Type definitions"),Object(i.b)("p",null,"A ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/rsdl/rsdl-abnf#type-definition"}),"typeDefinition")," is mapped to either a ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"http://docs.oasis-open.org/odata/odata-csdl-xml/v4.01/odata-csdl-xml-v4.01.html#sec_EntityType"}),"entity type")," or a ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"http://docs.oasis-open.org/odata/odata-csdl-xml/v4.01/odata-csdl-xml-v4.01.html#sec_ComplexType"}),"complex type"),"."),Object(i.b)("p",null,"Type definitions with one or more properties marked with a @key annotation are mapped to an entity type.\nAnd respectively Type definitions without @key properties are mapped to a complex type."),Object(i.b)("h3",{id:"type-definitions-without-key-properties"},"Type definitions without @key properties"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"    type name\n    {\n        firstName : string\n        lastName: string\n    }\n")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-JSON"}),'    "name": {\n      "$Kind": "ComplexType",\n      "firstName": {\n        "$Type": "Edm.String"\n      },\n      "lastName": {\n        "$Type": "Edm.String",\n      }\n    }\n')),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-XML"}),'    <ComplexType Name="name">\n        <Property Name="firstName" Type="Edm.String" Nullable="false" />\n        <Property Name="lastName" Type="Edm.String" Nullable="false" />\n    </ComplexType>\n')),Object(i.b)("h3",{id:"type-definitions-with-key-properties"},"Type definitions with @key properties"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"    type employee\n    {\n        @key id: integer\n        name : name\n    }\n")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-JSON"}),'    "employee": {\n      "$Kind": "EntityType",\n      "$Key": [\n        "id"\n      ],\n      "id": {\n        "$Type": "Edm.Int32"\n      },\n      "name": {\n        "$Type": "rapid.name"\n      }\n    }\n')),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-XML"}),'    <EntityType Name="employee">\n        <Key>\n          <PropertyRef Name="id" />\n        </Key>\n        <Property Name="id" Type="Edm.Int32" Nullable="false" />\n        <Property Name="name" Type="rapid.name" Nullable="false" />\n    </EntityType>\n')),Object(i.b)("h3",{id:"properties"},"Properties"),Object(i.b)("p",null,"The properties of a type definition are mapped to either a Property or a NavigationProperty depending on the property's type."),Object(i.b)("p",null,"In the following example lets assume, name is mapped to a complete type and employee is mapped to a entity type."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"    type company\n    {\n        @key stockSymbol: string\n        name: name\n        employees: [employee]\n    }\n")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-JSON"}),'    "company": {\n      "$Kind": "EntityType",\n      "$Key": [\n        "stockSymbol"\n      ],\n      "stockSymbol": {\n        "$Type": "Edm.String"\n      },\n      "name": {\n        "$Type": "Edm.String"\n      },\n      "ceo": {\n        "$Kind": "NavigationProperty",\n        "$Type": "rapid.employee"\n      }\n    }\n')),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-XML"}),'    <EntityType Name="company">\n        <Key>\n          <PropertyRef Name="stockSymbol" />\n        </Key>\n        <Property Name="name" Type="Edm.String" Nullable="false" />\n        <NavigationProperty Name="ceo" Type="rapid.employee" Nullable="false" />\n    </EntityType>\n')),Object(i.b)("h4",{id:"property-types"},"Property types"),Object(i.b)("p",null,"The type of a property is one of:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"one of the primitive types defined in the 'typeName' syntax rule"),Object(i.b)("li",{parentName:"ul"},"any of the primitive EDM type listed in ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"http://docs.oasis-open.org/odata/odata-csdl-xml/v4.01/odata-csdl-xml-v4.01.html#_Toc38530338"}),"OData CSDL XML Representation")),Object(i.b)("li",{parentName:"ul"},"the types or enums defined in the model")),Object(i.b)("p",null,"Each of these named types can be marked"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"optional via a question mark ",Object(i.b)("inlineCode",{parentName:"li"},"?")),Object(i.b)("li",{parentName:"ul"},"multi-value via enclosing it in brackets ",Object(i.b)("inlineCode",{parentName:"li"},"[")," ",Object(i.b)("inlineCode",{parentName:"li"},"]"))),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"    type foo\n    {\n        test1: integer\n        test2: integer?\n        test3: [integer]\n        test4: [integer?]\n    }\n")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-JSON"}),'  "foo": {\n      "$Kind": "EntityType",\n      "test1": {\n        "$Type": "Edm.Int32"\n      },\n      "test2": {\n        "$Nullable": true,\n        "$Type": "Edm.Int32"\n      },\n      "test3": {\n        "$Collection": true,\n        "$Type": "Edm.Int32"\n      },\n      "test4": {\n        "$Nullable": true,\n        "$Collection": true,\n        "$Type": "Edm.Int32"\n      }\n    }\n')),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-XML"}),'    <EntityType Name="foo">\n        <Property Name="test1" Type="Edm.Int32" Nullable="false" />\n        <Property Name="test2" Type="Edm.Int32" Nullable="true" />\n        <Property Name="test3" Type="Collection(Edm.Int32)" Nullable="false"/>\n        <Property Name="test4" Type="Collection(Edm.Int32)" Nullable="true"/>\n    </EntityType>\n')),Object(i.b)("h3",{id:"functions"},"Functions"),Object(i.b)("p",null,'The syntactical production rule called "function" is mapped to a bound action or a bound function in CSDL.'),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"functions without annotation and the ones annotated with @function are mapped to CSDL ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"http://docs.oasis-open.org/odata/odata-csdl-xml/v4.01/odata-csdl-xml-v4.01.html#sec_Function"}),"Function")),Object(i.b)("li",{parentName:"ul"},'functions with an "@action" annotation are mapped to a CSDL ',Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"http://docs.oasis-open.org/odata/odata-csdl-xml/v4.01/odata-csdl-xml-v4.01.html#sec_Action"}),"Action"))),Object(i.b)("p",null,'The binding parameter of the function is inferred from the containing type production rule and named "this"'),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"    type employee\n    {\n        @key id: integer\n\n        foo()\n    }\n")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-JSON"}),'   "foo": [\n      {\n        "$Kind": "Function",\n        "$IsBound": true,\n        "$IsComposable": true,\n        "$Parameter": [\n          {\n            "$Name": "it",\n            "$Type": "rapid.employee"\n          }\n        ]\n      }\n    ]\n')),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-XML"}),'    <Function Name="foo" IsBound="true" IsComposable="true">\n        <Parameter Name="it" Type="rapid.employee" Nullable="false" />\n    </Function>\n')),Object(i.b)("h4",{id:"function-return-type"},"Function return type"),Object(i.b)("p",null,"The return type of a function is mapped similar to a property type with the same semantic for ",Object(i.b)("inlineCode",{parentName:"p"},"[")," ",Object(i.b)("inlineCode",{parentName:"p"},"]")," and ",Object(i.b)("inlineCode",{parentName:"p"},"?"),"."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"    type employee\n    {\n        @key id: integer\n\n        foo() : integer\n        bar() : [integer]\n    }\n")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-JSON"}),'    "foo": [\n      {\n        "$Kind": "Function",\n        "$IsBound": true,\n        "$IsComposable": true,\n        "$Parameter": [\n          {\n            "$Name": "it",\n            "$Type": "rapid.employee"\n          }\n        ],\n        "$ReturnType": {\n          "$Type": "Edm.Int32"\n        }\n      }\n    ],\n    "bar": [\n      {\n        "$Kind": "Function",\n        "$IsBound": true,\n        "$IsComposable": true,\n        "$Parameter": [\n          {\n            "$Name": "it",\n            "$Type": "rapid.employee"\n          }\n        ],\n        "$ReturnType": {\n          "$Collection": true,\n          "$Type": "Edm.Int32"\n        }\n      }\n    ]\n')),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-XML"}),'    <Function Name="foo" IsBound="true" IsComposable="true">\n        <Parameter Name="it" Type="rapid.employee" Nullable="false" />\n        <ReturnType Type="Edm.Int32" Nullable="false" />\n    </Function>\n\n    <Function Name="bar" IsBound="true" IsComposable="true">\n        <Parameter Name="it" Type="rapid.employee" Nullable="false" />\n        <ReturnType Type="Collection(Edm.Int32)" Nullable="false" />\n    </Function>\n')),Object(i.b)("h4",{id:"functions-parameters"},"Functions parameters"),Object(i.b)("p",null,"Parameters are similar to properties in that they have a name and reference a type."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"    type employee\n    {\n        @key id: integer\n        foo(a: integer, b: [integer?])\n    }\n")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-JSON"}),'    "foo": [\n      {\n        "$Kind": "Function",\n        "$IsBound": true,\n        "$IsComposable": true,\n        "$Parameter": [\n          {\n            "$Name": "it",\n            "$Type": "rapid.employee"\n          },\n          {\n            "$Name": "a",\n            "$Type": "Edm.Int32"\n          },\n          {\n            "$Name": "b",\n            "$Collection": true,\n            "$Type": "Edm.Int32",\n            "$Nullable": true\n          }\n        ]\n      }\n    ]\n')),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-XML"}),'    <Function Name="foo" IsBound="true" IsComposable="true">\n        <Parameter Name="it" Type="rapid.employee" Nullable="false" />\n        <Parameter Type="Edm.Int32" Nullable="false" />\n        <Parameter Type="Collection(Edm.Int32)" Nullable="true" />\n    </Function>\n')),Object(i.b)("p",null,"[TODO: decide on optional parameter, how they are different from nullable required parameters, and if that is a feature required now or too much for RAPID]"),Object(i.b)("h2",{id:"enum-definitions"},"Enum definitions"),Object(i.b)("p",null,"A ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/rsdl/rsdl-abnf#enumDefinition"}),"enumDefinition")," is mapped to an CSDL EnumType. The enumeration members values are automatically assigned."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"enum employmentType { salaried hourly }\n")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-JSON"}),'    "employmentType": {\n      "$Kind": "EnumType",\n      "salaried": 0,\n      "hourly": 1\n    }\n')),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-XML"}),'    <EnumType Name="employmentType">\n        <Member Name="salaried" Value="0" />\n        <Member Name="hourly" Value="1" />\n    </EnumType>\n')),Object(i.b)("h2",{id:"service-definition"},"Service definition"),Object(i.b)("p",null,'As mentioned above, every RAPID service model create a CSDL entity container named "default"'),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"service {\n}\n")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-JSON"}),"    \n")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-XML"}),'   <EntityContainer Name="default">\n')),Object(i.b)("h3",{id:"multi-value-service-element"},"multi-value service element"),Object(i.b)("p",null,"A service definition element of a multi-value type gets mapped to a CSDL entity set."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"service\n{\n  employees: [employee]\n}\n")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-XML"}),'  <EntitySet Name="employees" EntityType="rapid.employee" />\n')),Object(i.b)("p",null,"If the type is used as a type on a multi-value and as the type of a property of type definitions (i.e. a navigation property in CSDL), the appropriate navigation property bindings get created.\nIn below example, the ",Object(i.b)("inlineCode",{parentName:"p"},"company")," type has a ",Object(i.b)("inlineCode",{parentName:"p"},"ceo")," and an ",Object(i.b)("inlineCode",{parentName:"p"},"employees")," property of the same type ",Object(i.b)("inlineCode",{parentName:"p"},"employee")," (except one is single-value and the other multi-value). The binding in CSDL defines that objects of these properties are bound to the ",Object(i.b)("inlineCode",{parentName:"p"},"employees")," entity set."),Object(i.b)("p",null,"RAPID does not allow to have multiple entity sets for the same type, so that the binding is always uniquely defined."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"service\n{\n    competitors: [company]\n}\n")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-XML"}),'  <EntitySet Name="competitors" EntityType="rapid.company">\n    <NavigationPropertyBinding Path="ceo" Target="employees" />\n    <NavigationPropertyBinding Path="employees" Target="employees" />\n  </EntitySet>\n')),Object(i.b)("h3",{id:"single-value-service-element"},"single-value service element"),Object(i.b)("p",null,"A service definition element of a single-value type gets mapped to a CSDL singleton."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"service\n{\n  company: company\n}\n")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-XML"}),'   <Singleton Name="company" Type="rapid.company" />\n')),Object(i.b)("h2",{id:"appendix"},"Appendix"),Object(i.b)("h3",{id:"references"},"References"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://en.wikipedia.org/wiki/Semantics_(computer_science)"}),"Semantics")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"http://docs.oasis-open.org/odata/odata-csdl-xml/v4.01/odata-csdl-xml-v4.01.html#sec_ComplexType"}),"OData CSDL XML Representation")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/standardapi/odata-rapid-pro"}),"RAPID Pro repo"))))}b.isMDXComponent=!0},85:function(e,n,t){"use strict";t.d(n,"a",(function(){return s})),t.d(n,"b",(function(){return u}));var a=t(0),r=t.n(a);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=r.a.createContext({}),b=function(e){var n=r.a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},s=function(e){var n=b(e.components);return r.a.createElement(c.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},d=r.a.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),s=b(t),d=a,u=s["".concat(o,".").concat(d)]||s[d]||m[d]||i;return t?r.a.createElement(u,l(l({ref:n},c),{},{components:t})):r.a.createElement(u,l({ref:n},c))}));function u(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=d;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=t[c];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,t)}d.displayName="MDXCreateElement"}}]);